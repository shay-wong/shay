# Quantumult X Personal Configuration
# Author by Shay
# 2024/09/28
# Wiki https://qx.atlucky.me/

# general 模块内为一些通用的设置参数项
[general]
# 节点延迟测试链接
# Quantumult X 会对 server_check_url 指定的网址进行相应测试，以确认节点的可用性
# 你同样可以在 server_local/remote 中，为节点、订阅单独指定 server_check_url 参数
# 如您为节点单独指定了 url，则所有相关延迟测试中，均会采用单独指定的 url 地址
server_check_url=http://cp.cloudflare.com/generate_204

# 网络连通性测试链接
network_check_url=http://connectivitycheck.platform.hicloud.com/generate_204

# 节点延迟测试超时参数(毫秒), 需小于 5000 毫秒才生效
server_check_timeout=3000

# 资源解析器，可用于自定义各类远程资源的转换，如节点，规则 filter，复写 rewrite 等，url 地址可远程，可 本地/iCloud(Quantumult X/Scripts目录);
resource_parser_url=https://fastly.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js

# 节点页面的节点信息展示，可完整自定义展示内容与方式
# extreme-ip-lookup 为 Quantumult X 作者提供的示范 api
# geo_location_checker=http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-location-with-script.js
# 其他一些 GEO 信息检查器
# ⚠️注意不要同时启用两个geo_location_check
# 以下是搜集的geo_location_checker
; geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://jexxagn.netlify.app/IP-API.js
; geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/GeoLocationChecker/QuantumultX/IP-API.js
; geo_location_checker=http://ip-api.com/json, https://raw.githubusercontent.com/kiksong/qsc/master/qx/script/IPInfo.js
; geo_location_checker=http://ip-api.com/json/?fields=8450015&lang=zh-CN,https://raw.githubusercontent.com/deezertidal/QuantumultX-Rewrite/master/rewrite/ip-api.js
; geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://github.com/KOP-XIAO/QuantumultX/raw/master/Scripts/IP_API.js
; geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Quantumult/Script/geo_location_checker.js
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/Orz-3/Orz-3/master/QuantumultX/IP.js

#　UDP　Drop 名单，同白名单类似，但不会返回 ICMP “端口不可达” 信息
# drop 名单仅处理 whitelist 名单中的端口
udp_drop_list=443

# 运行模式模块，running_mode_trigger 设置，即根据网络自动切换 分流/直连/全局代理 等模式。
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# running-mode-trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。
# 第一个filter为4g模式开启规则分流, 第二个filter为其他wifi下开启规则分流，asus-5g 则切换为全局直连，asus 切换为全局代理
# 默认关闭根据wifi切换模式，如需开启，删除下方的";"即可
; running_mode_trigger=filter, filter, asus-5g:all_direct, asus: all_proxy

# 与 ssid-suspend 以及 ssid 策略组的区别
# - ssid-suspend 下，Quantumult X 网络相关功能会停止工作，只有[task] 模块生效；
# - ssid 策略组，属于 filter 即分流模式的一个小部分，灵活，但设置相对麻烦；
# - running_mode_trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，设置简单;

# ssid_suspended_list: 让 Quantumult X 在特定 Wi-Fi 网络下暂停工作(仅 task 模块会继续工作), 写入你想要 Quantumult X 暂停的 Wi-Fi网络名称，多个wifi用“,”连接
; ssid_suspended_list=WifiNAme, WifiName

# UDP名单，留空则默认所有为端口。不在udp白名单列表中的端口，将被丢弃处理。
# 参数 udp_whitelist 从 IP 层控制 UDP 数据是否需要舍弃；如舍弃，则该 UDP 请求不会进入规则模块以及策略模块，TCP/UDP 请求记录中也不会有相应的条目，但仍可在日志中查询到相关信息（日志等级 debug）。
# 该参数控制的是流入 Quantumult X Tunnel 的请求，并非 Quantumult X Tunnel 发出的请求，即不会作用于节点所使用的 UDP 目标端口。
; udp_whitelist=53, 123, 1900, 80-443

# DNS排除列表, dns exclusion list中的域名将不使用fake-ip方式. 其它域名则全部采用 fake-ip 及远程解析的模式
dns_exclusion_list=*.lan, *.direct, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, global.turn.twilio.com, global.stun.twilio.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, cable.auth.com, localhost.*.qq.com, localhost.*.weixin.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, music.163.com, *.music.163.com, *.126.net, musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, *.kuwo.cn, api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, *.y.qq.com, streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, *.xiami.com, *.music.migu.cn, music.migu.cn, proxy.golang.org, *.mcdn.bilivideo.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, *.10099.com.cn, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*

# 节点不支持UDP转发时回退策略: direct/reject/节点
# 参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。
# 当 UDP 请求经过规则模块以及策略模块后所命中的节点为 Quantumult X 所不支持 UDP 转发的节点（例如：VMess），或命中的节点虽支持 UDP 转发但节点配置未显示注明 udp-relay=true 的节点（例如：SS 或 SSR 且与服务器是否真实开启了 UDP 转发无关），则 fallback_udp_policy 会被使用。
# 该参数默认值为 reject。
# 注意：如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
fallback_udp_policy=reject

# 跳过代理，列表中的内容将不经过 QuantumultX的处理, 设置后建议重启设备
excluded_routes=239.255.255.250/32, 192.168.0.0/16, 193.168.0.0/24, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, 17.0.0.0/8

# ICMP(Internet Control Message Protocol) 协议是 TCP/IP 协议族的一个子协议,用于在IP主机、路由器之间传递控制消息。
# icmp_auto_reply 这个内核参数控制系统对 ICMP 请求的自动回复行为。
# icmp_auto_reply=true 意味着:
# - 系统会自动回复收到的 ICMP 请求数据包。
# - 比如当接收到 ICMP Echo Request (ping) 数据包时,会自动回复 ICMP Echo Reply 数据包。
# - 这是 Linux 系统默认的设置,用于支持 ICMP 数据包的正常响应。
# icmp_auto_reply=false 意味着:
# - 系统不会自动回复 ICMP 请求。
# - 接收到 ping 请求时不会回复。
# - 可以用于阻止某台主机响应 ping 查询。
# - 需要手动处理及回复 ICMP 数据包。
# 总之,icmp_auto_reply 参数控制是否自动响应ICMP请求,默认为 true 以支持 ICMP 协议正常工作。
# 设置为 false 可以实现“隐藏”主机不被 ping 到的效果。
icmp_auto_reply=true

[dns]
# 禁用系统 DNS
# 如果你并不想使用系统 (通过 DHCP) 自动获取的 DNS 设置，可以如上设置，但需要注意应该设置至少一条自定义 DNS，如 server=119.29.29.29
no-system
# 禁用系统 IPv6
# 当设置 no-ipv6 时，Quantumult X Tunnel 的 DNS 模块将直接让 AAAA 查询失败，但仍然允许从 IPv6的 DNS 服务器查询 A 记录。
# 注释或删除 no-ipv6, 则启用 IPv6，同时需要在右下角风车「设置」→「其他设置」→「VPN」区域-开启/关闭「兼容性增强」
no-ipv6

# 自定义 DNS 服务器
server=119.29.29.29
server=180.184.1.1
server=223.5.5.5
server=114.114.114.114
; server=[2402:4e00::]
; server=[2400:3200::1]

# 指定 DNS 查询指定域名
#  使用系统 DNS 解析 example.com
# server=/example.com/system
# 使用 119.29.29.29 查询 qq.com 及其子域名
# server=/qq.com/119.29.29.29
# server=/*.qq.com/119.29.29.29:53
# 使用 [2001:4860:4860::8888] 的 53 端口解析 example.com
# server=/example.com/[2001:4860:4860::8888]:53
server=/dl.google.com/119.29.29.29
server=/dl.l.google.com/119.29.29.29
server=/update.googleapis.com/119.29.29.29
server=/*.dl.playstation.net/119.29.29.29
server=/*icloud.com/119.29.29.29
server=/*icloud.com.cn/119.29.29.29
server=/*tencent.com/119.29.29.29
server=/*weixin.com/119.29.29.29

# 本地 DNS 映射
# 指定域名到特定 IP 地址
address=/mtalk.google.com/108.177.125.188

# 别名
; alias=/example7.com/another-example.com

# 规避指定结果
# 用于指定 DNS 服务器返回的 A 及 AAAA 记录中哪些属于无效结果
# 可使用通配符 ? 与 *
# ⚠️ 注意：
# 当并发向多个上游 DNS 进行查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果（如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录）；
# 如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败；
# 如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数；
circumvent-ipv4-answer=127.0.0.1, 0.0.0.0, 182.43.124.6, 39.102.194.95, 36.135.17.248, 36.135.82.110, 39.105.1.17, 39.130.181.72, 39.130.181.73, 39.173.74.185, 47.92.198.202, 111.22.226.1, 111.28.0.32, 111.31.192.110, 111.44.246.131, 111.56.127.216, 111.63.132.170, 112.15.232.43, 112.17.14.211, 112.54.50.50, 117.156.25.11, 117.187.10.42, 120.202.17.103, 120.209.204.204, 120.222.19.204, 121.4.135.105,183.203.36.19, 183.207.72.18, 183.213.92.2, 183.220.145.129, 183.252.183.9, 211.137.133.69, 211.138.218.190, 211.139.25.61, 211.139.145.129, 218.201.25.129, 218.201.25.130, 218.203.122.98, 221.130.39.3
circumvent-ipv6-answer=::

# 使用 DoH3，DNS over HTTP/3，须开启下面参数
# 当 prefer-doh3 被设置时，DoH 将尝试通过 HTTP/3 的查询，如果失败，查询连接将退回到 HTTP/2。
# 由于 HTTP/2 和 HTTP/3 连接都支持复用，当改变该设置时它可能不会立即生效，但可以通过重新连接Quantumult X 隧道或手动改变当前网络环境，让它立即生效。
; prefer-doh3

# 自定义 DoH 服务器
# 当设置 doh-server (DNS over HTTPS) 或 doq-server (DNS over QUIC)时，system 和所有其他未加密的常规 (没有特定的域与之绑定) 服务器将被忽略。
# 多个 (并发查询) doh-server 应配置在一行中，URLs 应以逗号分开。
# 如果 iOS 版本小于 iOS 13.0，最大的 doh-server 数量将被限制为 1；如果 iOS 版本小于iOS 15.0，最大的 doh-server 数量将被限制为 2。
# 当使用的 doh-server 不是基于 HTTP/2 时，DoH 将被暂时禁用，普通的服务器将被使用，直到下次启动 VPN 连接。
; doh-server=https://doh.pub/dns-query, https://dns.alidns.com/dns-query

# 如指定了 DoQ 服务，则 DoH 以及其它 dns 解析均失效
; doq-server quic://223.5.5.5, quic://223.6.6.6

# 策略组
[policy]
# static：静态，指向手动选择的候选服务器。可以嵌套其它所有类型的策略组，需自己手动选择路线/子策略组.
# 格式：static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png
static=全球加速, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
static=OpenAI, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/ChatGPT(1).png
static=Claude, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/assets/images/claude.png
static=Gemini, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AI.png
static=Telegram, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Telegram.png
static=TikTok, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TikTok.png
static=Twitter, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/lige47/QuanX-icon-rule/main/icon/twitter(3).png
static=Instagram, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Instagram.png
static=YouTube, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/YouTube.png
static=Netflix, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png
static=Apple, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Apple.png
static=港台番剧, 香港节点, 台湾节点, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/StreamingSE.png
static=国际媒体, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
static=黑白名单, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 欧洲节点, 其他节点, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png
static=其他节点, server-tag-regex=^(?!.*(港|台|日|韩|新加坡|狮|獅|美|欧|英|法|荷|冰|德|乌|瑞|HK|TW|JP|KR|SG|US|EU|GB|UK|FR|NL|IS|DE|UA|CH|Hong|Tai|Japan|Korea|Singapore|States|European|Union|Britain|France|Netherlands|Iceland|Germany|Ukraine|Switzerland|🇭🇰|🇹🇼|🇯🇵|🇰🇷|🇸🇬|🇺🇸|🇬🇧|🇫🇷|🇳🇱|🇮🇸|🇩🇪|🇺🇦|🇨🇭|🇪🇺)), img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png

# url-latency-benchmark：最低延迟，选取延迟最优节点（误区：延迟最低不一定速度最快），该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
# 格式：url-latency-benchmark=policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, tolerance=50,C,img-url=https://example.com/icon.png
# resource-tag-regex=表示使用正则筛选需要匹配的资源标签（比如机场名称）
# server-tag-regex=表示使用正则筛选需要匹配的节点标签（比如节点中带有香港、美国这种）
# check-interval=600 表示每600秒检查一次节点延迟，如果此策略已由任何请求激活，则将重新计算该间隔。
# alive-checking=false 如果被设置为true，那么即使该策略处于空闲状态，也会重新计算间隔时间，并启动基准测试。
# img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）
# direct/proxy/reject 则只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)
url-latency-benchmark=香港节点, server-tag-regex=(?=.*(港|🇭🇰️|HK|(?i)Hong))^((?!(台|日|韩|新|美|欧|英|法|荷|冰|德|乌|瑞)).)*$, check-interval=300, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
url-latency-benchmark=台湾节点, server-tag-regex=(?=.*(台|🇨🇳|🇹🇼|TW|(?i)Taiwan))^((?!(港|日|韩|新|美|欧|英|法|荷|冰|德|乌|瑞)).)*$, check-interval=300, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
url-latency-benchmark=日本节点, server-tag-regex=(?=.*(日|🇯🇵|JP|(?i)Japan))^((?!(港|台|韩|新|美|欧|英|法|荷|冰|德|乌|瑞)).)*$, check-interval=300, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
url-latency-benchmark=韩国节点, server-tag-regex=(?=.*(韩|韓|朝|🇰🇷|KR|(?i)Korea))^((?!(港|台|日|新|美|欧|英|法|荷|冰|德|乌|瑞)).)*$, check-interval=300, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
url-latency-benchmark=狮城节点, server-tag-regex=(?=.*(新|狮|獅|🇸🇬|SG|(?i)Singapore))^((?!(港|台|日|韩|美|欧|英|法|荷|冰|德|乌|瑞|兰)).)*$, check-interval=300, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
url-latency-benchmark=美国节点, server-tag-regex=(?=.*(美|🇺🇸|US|(?i)States|American))^((?!(港|台|日|韩|新|欧|英|法|荷|冰|德|乌|瑞)).)*$, check-interval=300, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
url-latency-benchmark=欧洲节点, server-tag-regex=(?=.*(欧|英|法|荷|冰|德|乌|瑞|🇬🇧|🇫🇷|🇳🇱|🇮🇸|🇩🇪|🇺🇦|🇨🇭|🇪🇺|EU|GB|UK|FR|NL|IS|DE|UA|CH(?i)European|Union|Britain|France|Netherlands|Iceland|Germany|Ukraine|Switzerland))^((?!(港|台|日|韩|新|美)).)*$, check-interval=300, tolerance=0, alive-checking=false, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/European_Union.png

# 本地节点
[server_local]

# 引用（订阅）的节点（也就是常说的机场订阅之类的）
[server_remote]

# 本地分流规则
# 优先级: 本地分流规则 > 远程分流规则 (除非 inserted-resource 为 true)
[filter_local]
# appstorrent
host-keyword, appstorrent.ru, direct
# AmyTelecom 的订阅更新需要直连, 如果不需要可以删除
host-suffix, nqcbls.xyz, direct
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct
# 意为域名的IP地址归属于中国时走直连。
# 由于QX的本地规则优先级更高
# 在本地规则写入［geoip， cn， direct］且不开启［分流匹配优化］时
# 可能会导致远程规则中的国内规则不生效，
# 因此建议在［远程规则］中引用规则以引用规则以添加［geoip，cn，direct］，并放置在最下方。
; geoip, cn, direct
final, 黑白名单

# 远程分流规则
# 通过分流-规则资源中添加的引用资源-分流，保存在配置文件的[filter_remote]字段下，这种一般是不能直接在本地直接修改其中的内容的，一般是以list的格式，每个list中可以包含大量的多种类型和参数的规则。
# 如需修改list中的某条分流可以使用解析器来帮助完成。
# 分流规则集的位置是可以根据需要进行调整位置的，调整方法：长按规则集条目，微振动后最右侧会出现三条横线的图标，按住图标即可上下拖动到合适位置。
# 根据列表顺序越前面优先级更高
[filter_remote]
# 配置文件中一条完整的远程分流规则配置是这么组成的：
# <资源路径>, <资源标签>, <策略偏好>, <自动更新时间间隔>, <是否使用资源解析器>, <插入资源>, <是否启用>
# tag 资源标签：相当于名称，标识这条远程分流文件的作用；
# force-policy 策略偏好：可选，此处明确设置为 REJECT 策略，当策略偏好选中某策略时，远程资源的过滤器中的策略将被忽略，并使用策略偏好中指定策略；
# update-interval 自动更新的时间间隔，单位为秒；
# opt-parser 是否使用资源解析器，若关闭则改为 false；
# inserted-resource 插入资源，将分流文件中的规则放置于本地规则之前；
# enabled 是否启用该分流文件，若不使用可改为 false；
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list, tag=广告拦截, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list, tag=隐私保护, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rules/openai.list, tag=OpenAI, force-policy=OpenAI, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rules/claude.list, tag=Claude, force-policy=Claude, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rules/gemini.list, tag=Gemini, force-policy=Gemini, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rules/1password.list, tag=1Password, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/Video/TikTok.list, tag=TikTok, force-policy=TikTok, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Google/GoogleVoice.list, tag=谷歌语音, force-policy=美国节点, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Telegram.list, tag=Telegram, force-policy=Telegram, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Apple/Apple.list, tag=Apple, force-policy=Apple, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Twitter/Twitter.list, tag=Twitter, force-policy=Twitter, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Instagram/Instagram.list, tag=Instagram, force-policy=Instagram, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/WeChat.list, tag=微信直连, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/YouTube/YouTube.list, tag=YouTube, force-policy=YouTube, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Netflix/Netflix.list, tag=Netflix, force-policy=Netflix, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/CN.list, tag=港台番剧, force-policy=港台番剧, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/!CN.list, tag=国际媒体, force-policy=国际媒体, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Proxy.list, tag=全球加速, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Proxy+.list, tag=代理修正, force-policy=proxy, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rules/cn.list, tag=国内网站, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rules/geoip_cn.list, tag=GeoIP, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true

# 本地重写
[rewrite_local]
^https?:\/\/(www.)?(g|google)\.cn url 302 https://www.google.com

# 远程重写
[rewrite_remote]
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rewrite/get_cookie.conf, tag=Cookie, update-interval=172800, opt-parser=true, enabled=false
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/QX.snippet, tag=Sub Store, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJs, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/Function/UnblockURLinWeChat.conf, tag=去除微信 URL 屏蔽, update-interval=172800, opt-parser=true, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/Applet.conf, tag=微信小程序去广告, update-interval=86400, opt-parser=true, enabled=true
https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/YoutubeAds.conf, tag=YouTube Ads, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/TestFlightDownload.conf, tag=TestFlight区域限制解除, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/TikTok.conf, tag=Tiktok解锁, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rewrite/ad_block/start_up.conf, tag=墨鱼去开屏, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/module/tieba-qx.conf, tag=贴吧去广告, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/shay-wong/shay/main/quantumult_x/rewrite/ad_block/advertising.sgmodule, tag=神机去广告, update-interval=172800, opt-parser=true, enabled=true

# 脚本
[task_local]
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体解锁查询, img-url=arrowtriangle.right.square.system, enabled=true

# http_backend 是通过QX在本地搭建一个HTTP服务器，并且使用JavaScript来进行数据处理，可以通过http://address:port/path/ 来访问。
# 默认的地址和端口：127.0.0.1:9999 。使用时候需QX处于开启状态且http_backend 开关已经开启。
# 因为现在的QX相关的脚本都在重写中进行，几乎没有使用 http_backend 的方式了。
[http_backend]

# “MITM” 是 “Man-in-the-Middle” 的缩写，翻译为中文是 “ 中间人攻击 ”。
[mitm]
# 主机名
hostname=www.google.cn
# 证书
; p12 =
# CA密码
; passphrase =
# 跳过验证证书
skip_validating_cert=false
# 强制SNI域名
force_sni_domain_name=false
# 当使用 Quantumult X 在 M 芯片的 Mac 设备上作为局域网网关时，使用下面的参数来 跳过某些特定设备的 mitm 需求
;skip_src_ip=192.168.4.0, 92.168.4.51
# 当多个不同的 TCP 连接（非域名类请求）的目标 IP 不同，但这些连接的 TSL 握手 SNI 字段相同时，如需跳过其中某些连接的 MitM hostname 匹配过程，可使用👇参数。
;skip_dst_ip=123.44.55.4
